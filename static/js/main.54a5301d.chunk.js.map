{"version":3,"sources":["redux/live.ts","redux/app.ts","redux/store.ts","components/TcomItem.tsx","api/live.ts","redux/utils.ts","components/TcomTop.tsx","components/TcomNew.tsx","components/Menu.tsx","components/Header.tsx","components/App.tsx","index.tsx"],"names":["live","createSlice","name","initialState","news","tops","page","size","currentLive","reducers","setNews","state","action","payload","setTops","setPage","setCurrentLive","actions","app","currentPage","menu","setCurrentPage","rootReducer","combineReducers","reducer","store","configureStore","TcomItem","index","item","className","href","url","title","parsedUrl","URL","hostname","replace","e","getHost","score","by","timestamp","date","parse","toString","Date","distanceInWordsToNow","getTimeSpent","time","descendants","baseUrl","getLive","type","a","fetch","liveResponse","ok","json","parsedLiveResponse","getItem","itemId","itemResponse","parsedItemResponse","getLiveFromServer","lives","dispatch","getMappedLive","newLives","slice","Promise","all","map","mappedLives","TcomTop","useSelector","useDispatch","useEffect","id","onClick","TcomNew","Menu","m","to","length","Header","src","alt","width","height","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54a5301d.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { ItemResponse, LiveResponse } from '../types/live';\n\nexport interface LiveState {\n  news: LiveResponse;\n  tops: LiveResponse;\n  page: number;\n  size: number;\n  currentLive: Array<ItemResponse>;\n}\n\nconst liveState: LiveState = {\n  news: [],\n  tops: [],\n  page: 0,\n  size: 30,\n  currentLive: [],\n};\n\nexport const live = createSlice({\n  name: 'live',\n  initialState: liveState,\n  reducers: {\n    setNews: (state, action: PayloadAction<LiveState['news']>) => {\n      state.news = action.payload;\n    },\n    setTops: (state, action: PayloadAction<LiveState['tops']>) => {\n      state.tops = action.payload;\n    },\n    setPage: (state, action: PayloadAction<LiveState['page']>) => {\n      state.page = action.payload;\n    },\n    setCurrentLive: (\n      state,\n      action: PayloadAction<LiveState['currentLive']>,\n    ) => {\n      state.currentLive = action.payload;\n    },\n  },\n});\n\nexport const {\n  setNews, setTops, setCurrentLive, setPage,\n} = live.actions;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport interface AppState {\n  currentPage: string;\n  menu: Array<string>;\n}\n\nconst appState: AppState = {\n  currentPage: '',\n  menu: ['new', 'past', 'comments', 'ask', 'show', 'jobs', 'submit'],\n};\n\nexport const app = createSlice({\n  name: 'app',\n  initialState: appState,\n  reducers: {\n    setCurrentPage: (state, action: PayloadAction<AppState['currentPage']>) => {\n      state.currentPage = action.payload;\n    },\n  },\n});\n\nexport const { setCurrentPage } = app.actions;\n","import { combineReducers } from 'redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { live, LiveState } from './live';\nimport { app, AppState } from './app';\n\nexport interface RootReducer {\n  live: LiveState;\n  app: AppState;\n}\n\nconst rootReducer = combineReducers({\n  live: live.reducer,\n  app: app.reducer,\n});\n\nexport const store = configureStore({\n  reducer: rootReducer,\n});\n","import React from 'react';\n\nimport parse from 'date-fns/parse';\nimport distanceInWordsToNow from 'date-fns/formatDistanceToNow';\nimport './TcomItem.css';\nimport { ItemResponse } from '../types/live';\n\nfunction TcomItem({ index, item }:\n{index: number; item: ItemResponse}) {\n  const getHost = (url: string) => {\n    try {\n      const parsedUrl = new URL(url);\n      return `(${parsedUrl.hostname.replace('www', '')})`;\n    } catch (e) {\n      return '';\n    }\n  };\n\n  const getTimeSpent = (timestamp: number) => {\n    if (timestamp) {\n      const date = parse(timestamp.toString(), 't', new Date());\n      return distanceInWordsToNow(date);\n    }\n    return '';\n  };\n\n  return (\n    <div className=\"Wrapper\">\n      <div className=\"LineOne\">\n        <div className=\"Rank\">\n          {index}\n          .\n        </div>\n        <div className=\"Votearrow\" />\n        <a href={item.url}>\n          {item.title}\n        </a>\n        <div className=\"By\">\n          &nbsp;\n          {getHost(item.url)}\n        </div>\n      </div>\n      <div className=\"LineTwo\">\n        {item.score}\n        {' '}\n        points by\n        {item.by}\n        {getTimeSpent(item.time)}\n        {' '}\n        |\n        {' '}\n        {item.descendants}\n      </div>\n    </div>\n  );\n}\n\nexport default TcomItem;\n","import { ItemResponse, Live, LiveResponse } from '../types/live';\n\nconst baseUrl = 'https://hacker-news.firebaseio.com/v0';\n\nexport const getLive = async (type: Live) => {\n  const liveResponse = await fetch(\n    `${baseUrl}/${type}stories.json?print=pretty`,\n  );\n  if (liveResponse.ok) {\n    const parsedLiveResponse = (await liveResponse.json()) as LiveResponse;\n    return parsedLiveResponse;\n  }\n  return [];\n};\n\nexport const getItem = async (itemId: number) => {\n  const itemResponse = await fetch(\n    `${baseUrl}/item/${itemId}.json?print=pretty`,\n  );\n  if (itemResponse.ok) {\n    const parsedItemResponse = (await itemResponse.json()) as ItemResponse;\n    return parsedItemResponse;\n  }\n  return null;\n};\n","import { getLive, getItem } from '../api/live';\nimport { ItemResponse, Live } from '../types/live';\nimport {\n  setNews, LiveState, setCurrentLive, setTops,\n} from './live';\nimport { store } from './store';\n\nexport const getLiveFromServer = async (type: Live) => {\n  const lives = await getLive(type);\n  switch (type) {\n    case 'new':\n      store.dispatch(setNews(lives));\n      break;\n    case 'top':\n      store.dispatch(setTops(lives));\n      break;\n    default:\n      break;\n  }\n};\n\nexport const getMappedLive = async (page: LiveState['page'], size: LiveState['size'], lives: LiveState['tops'] | LiveState['news']) => {\n  const newLives = lives.slice(\n    page * size,\n    page * size + size,\n  );\n  const mappedLives = await Promise.all(\n    newLives.map((live) => {\n      const item = getItem(live);\n      return item;\n    }),\n  );\n  store.dispatch(setCurrentLive(mappedLives as Array<ItemResponse>));\n};\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  LiveState, setPage,\n} from '../redux/live';\nimport { RootReducer } from '../redux/store';\nimport './TcomTop.css';\nimport TcomItem from './TcomItem';\nimport { getLiveFromServer, getMappedLive } from '../redux/utils';\n\nfunction TcomTop() {\n  const {\n    tops,\n    size,\n    page,\n    currentLive,\n  } = useSelector<RootReducer, LiveState>((state) => state.live);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(setPage(0));\n  }, []);\n\n  useEffect(() => {\n    getLiveFromServer('top');\n  }, [page, size]);\n\n  useEffect(() => {\n    getMappedLive(page, size, tops);\n  }, [tops]);\n\n  const tapOnMore = () => {\n    dispatch(setPage(page + 1));\n  };\n\n  return (\n    <div className=\"LiveItems\">\n      {currentLive.map((item, index) => (\n        <TcomItem\n          key={item.id}\n          index={index + 1 + page * size}\n          item={item}\n        />\n      ))}\n      <div className=\"More\" onClick={tapOnMore}>More</div>\n    </div>\n  );\n}\n\nexport default TcomTop;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  LiveState, setPage,\n} from '../redux/live';\nimport { RootReducer } from '../redux/store';\nimport './TcomTop.css';\nimport TcomItem from './TcomItem';\nimport { getLiveFromServer, getMappedLive } from '../redux/utils';\n\nfunction TcomNew() {\n  const {\n    news,\n    size,\n    page,\n    currentLive,\n  } = useSelector<RootReducer, LiveState>((state) => state.live);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(setPage(0));\n  }, []);\n\n  useEffect(() => {\n    getLiveFromServer('new');\n  }, [page, size]);\n\n  useEffect(() => {\n    getMappedLive(page, size, news);\n  }, [news]);\n\n  const tapOnMore = () => {\n    dispatch(setPage(page + 1));\n  };\n\n  return (\n    <div className=\"LiveItems\">\n      {currentLive.map((item, index) => (\n        <TcomItem\n          key={item.id}\n          index={index + 1 + page * size}\n          item={item}\n        />\n      ))}\n      <div className=\"More\" onClick={tapOnMore}>More</div>\n    </div>\n  );\n}\n\nexport default TcomNew;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  Link,\n} from 'react-router-dom';\nimport { AppState } from '../redux/app';\nimport { RootReducer } from '../redux/store';\nimport './Menu.css';\n\nfunction Menu() {\n  const { menu } = useSelector<RootReducer, AppState>((state) => state.app);\n\n  return (\n    <div className=\"Menu\">\n      {menu.map((m, index) => (\n        <Link to={`/${m}`} key={m} className=\"Item\">\n          {m}\n          {index !== menu.length - 1\n            ? ' | '\n            : ''}\n          &nbsp;\n        </Link>\n      ))}\n    </div>\n  );\n}\n\nexport default Menu;\n","import React from 'react';\nimport './Header.css';\nimport Menu from './Menu';\n\nfunction Header() {\n  return (\n    <div className=\"Header\">\n      <img\n        src=\"https://news.ycombinator.com/y18.gif\"\n        alt=\"\"\n        width=\"18\"\n        height=\"18\"\n      />\n      <div className=\"Title\">Hacker News</div>\n      <Menu />\n    </div>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport TcomTop from './TcomTop';\nimport TcomNew from './TcomNew';\nimport Header from './Header';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n        <Switch>\n          <Route path=\"/new\">\n            <TcomNew />\n          </Route>\n          <Route path=\"/\">\n            <TcomTop />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport { store } from './redux/store';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}